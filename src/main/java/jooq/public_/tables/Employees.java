/**
 * This class is generated by jOOQ
 */
package jooq.public_.tables;


import jooq.public_.Public;
import jooq.public_.tables.records.EmployeesRecord;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Employees extends TableImpl<EmployeesRecord> {

    private static final long serialVersionUID = -133117371;

    /**
     * The reference instance of <code>PUBLIC.EMPLOYEES</code>
     */
    public static final Employees EMPLOYEES = new Employees();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployeesRecord> getRecordType() {
        return EmployeesRecord.class;
    }

    /**
     * The column <code>PUBLIC.EMPLOYEES.IMAGE_PATH</code>.
     */
    public final TableField<EmployeesRecord, String> IMAGE_PATH = createField("IMAGE_PATH", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647), this, "");

    /**
     * The column <code>PUBLIC.EMPLOYEES.NAME</code>.
     */
    public final TableField<EmployeesRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647), this, "");

    /**
     * The column <code>PUBLIC.EMPLOYEES.EMAIL</code>.
     */
    public final TableField<EmployeesRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647), this, "");

    /**
     * The column <code>PUBLIC.EMPLOYEES.POSITION</code>.
     */
    public final TableField<EmployeesRecord, String> POSITION = createField("POSITION", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647), this, "");

    /**
     * The column <code>PUBLIC.EMPLOYEES.WAGE</code>.
     */
    public final TableField<EmployeesRecord, BigDecimal> WAGE = createField("WAGE", org.jooq.impl.SQLDataType.DECIMAL.precision(65535, 32767), this, "");

    /**
     * The column <code>PUBLIC.EMPLOYEES.HIRED_DATE</code>.
     */
    public final TableField<EmployeesRecord, Date> HIRED_DATE = createField("HIRED_DATE", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>PUBLIC.EMPLOYEES</code> table reference
     */
    public Employees() {
        this("EMPLOYEES", null);
    }

    /**
     * Create an aliased <code>PUBLIC.EMPLOYEES</code> table reference
     */
    public Employees(String alias) {
        this(alias, EMPLOYEES);
    }

    private Employees(String alias, Table<EmployeesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Employees(String alias, Table<EmployeesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Employees as(String alias) {
        return new Employees(alias, this);
    }

    /**
     * Rename this table
     */
    public Employees rename(String name) {
        return new Employees(name, null);
    }
}
